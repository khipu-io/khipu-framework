
import net.ltgt.gradle.errorprone.CheckSeverity

plugins {
  id 'com.diffplug.gradle.spotless' version '3.25.0'
  id 'com.jfrog.bintray' version '1.8.4'
  id 'com.github.ben-manes.versions' version '0.26.0'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'me.champeau.gradle.jmh' version '0.5.0' apply false
  id 'net.ltgt.errorprone' version '1.1.1'
}

if (!JavaVersion.current().java11Compatible) {
  throw new GradleException("Java 11 or later is required to build Besu.\n" +
  "  Detected version ${JavaVersion.current()}")
}

defaultTasks 'build', 'javadoc'

def buildAliases = ['dev': [
    'spotlessApply',
    'build',
    'javadoc'
  ]]

def expandedTaskList = []
gradle.startParameter.taskNames.each {
  expandedTaskList << (buildAliases[it] ? buildAliases[it] : it)
}
gradle.startParameter.taskNames = expandedTaskList.flatten()

// Gets an integer command argument, passed with -Pname=x, or the default if not provided.
def _intCmdArg(name, defaultValue) {
  return project.hasProperty(name) ? project.property(name) as int : defaultValue
}

def _intCmdArg(name) {
  return _intCmdArg(name, null)
}

def _strListCmdArg(name, defaultValue) {
  if (!project.hasProperty(name))
    return defaultValue

  return ((String) project.property(name)).tokenize(',')
}

def _strListCmdArg(name) {
  return _strListCmdArg(name, null)
}

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'net.ltgt.errorprone'
  apply from: "${rootDir}/gradle/versions.gradle"

  group = 'khipu'
  version = rootProject.version

  repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "https://hyperledger-org.bintray.com/besu-repo" }
    maven { url "https://repo.spring.io/libs-release" }
  }

  dependencies { errorprone "com.google.errorprone:error_prone_core" }

  apply plugin: 'com.diffplug.gradle.spotless'
  spotless {
    java {
      // This path needs to be relative to each project
      target fileTree('.') {
        include '**/src/*/java/**/*.java'
        exclude '**/generalstate/GeneralStateReferenceTest*.java'
        exclude '**/generalstate/GeneralStateRegressionReferenceTest*.java'
        exclude '**/blockchain/BlockchainReferenceTest*.java'
        exclude '**/.gradle/**'
      }
      removeUnusedImports()
      googleJavaFormat('1.7')
      //importOrder 'com', 'java', 'khipu', 'org', ''
      trimTrailingWhitespace()
      endWithNewline()
    }
    groovyGradle {
      target '*.gradle'
      greclipse().configFile(rootProject.file('gradle/formatter.properties'))
      endWithNewline()
      paddedCell()
    }

    // Below this line are currently only license header tasks
    format 'groovy', { target '**/src/*/grovy/**/*.groovy' }

    // Currently disabled due to referencetest issues
    //  format 'bash', {
    //    target fileTree('.') {
    //      include '**/*.sh'
    //     exclude '**/ansible/**'
    //    }
    //  }
    //  format 'sol', {
    //    target fileTree('.') { include '**/*.sol' }
    //  }
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs += [
      '-Xlint:unchecked',
      '-Xlint:cast',
      '-Xlint:rawtypes',
      '-Xlint:overloads',
      '-Xlint:divzero',
      '-Xlint:finally',
      '-Xlint:static',
      '-Werror',
    ]

    options.errorprone {
      excludedPaths = '.*/(generated/*.*|.*ReferenceTest_.*)'

      // Our equals need to be symmetric, this checker doesn't respect that.
      check('EqualsGetClass', CheckSeverity.OFF)
      // We like to use futures with no return values.
      check('FutureReturnValueIgnored', CheckSeverity.OFF)
      // We use the JSR-305 annotations instead of the Google annotations.
      check('ImmutableEnumChecker', CheckSeverity.OFF)
      // This is a style check instead of an error-prone pattern.
      check('UnnecessaryParentheses', CheckSeverity.OFF)

      // This check is broken in Java 12.  See https://github.com/google/error-prone/issues/1257
      if (JavaVersion.current() == JavaVersion.VERSION_12) {
        check('Finally', CheckSeverity.OFF)
      }
      // This check is broken after Java 12.  See https://github.com/google/error-prone/issues/1352
      if (JavaVersion.current() > JavaVersion.VERSION_12) {
        check('TypeParameterUnusedInFormals', CheckSeverity.OFF)
      }

      check('FieldCanBeFinal', CheckSeverity.WARN)
      check('InsecureCryptoUsage', CheckSeverity.WARN)
      check('WildcardImport', CheckSeverity.WARN)
    }

    options.encoding = 'UTF-8'
  }

  javadoc {
    failOnError = false
    options.addStringOption('Xdoclint:all', '-quiet')
    options.addStringOption('Xwerror', '-html5')
    options.encoding = 'UTF-8'
  }

  sourceCompatibility = 11
  targetCompatibility = 11

  dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.google.guava:guava'
    implementation 'com.graphql-java:graphql-java'
    implementation 'com.splunk.logging:splunk-library-javalogging'
    implementation 'info.picocli:picocli'
    implementation 'io.vertx:vertx-core'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.xerial.snappy:snappy-java'

    implementation 'org.hyperledger.besu.internal:api:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:besu:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:blockcreation:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:clique:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:core:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:common:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:config:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:crypto:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:enclave:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:eth:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:ethstats:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:ibft:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:ibftlegacy:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:metrics-core:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:nat:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:p2p:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:permissioning:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:plugins-rocksdb:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:retesteth:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:rlp:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:stratum:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:trie:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu.internal:util:20.10.0-RC2-SNAPSHOT'
    implementation 'org.hyperledger.besu:plugin-api:20.10.0-RC2-SNAPSHOT'
  }

}
